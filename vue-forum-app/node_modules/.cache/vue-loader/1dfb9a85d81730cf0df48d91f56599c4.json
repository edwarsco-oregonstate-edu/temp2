{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scott/forumApp/vue-forum-app/src/components/ProfileSettingsForm.vue?vue&type=style&index=0&id=680e09d0&lang=stylus&scoped=true&","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/components/ProfileSettingsForm.vue","mtime":1596398635581},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.field\n  margin-bottom: 20px\n\n.image-field\n  width: 100%\n  display: flex\n  justify-content: center\n  align-items: center\n\n.label\n  margin-bottom: 3px\n  display: block\n\n.submit-field\n  display: flex\n  justify-content: flex-end\n  align-items: center\n\n.error-message\n  color: $errorColor\n  text-align: left\n  flex: 1\n\n.success-message\n  color: $successColor\n  text-align: left\n  flex: 1\n\n",{"version":3,"sources":["ProfileSettingsForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ProfileSettingsForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"profile-settings-form page-form\">\n    <div class=\"field image-field\">\n      <base-image-input\n        :value=\"currentUser.avatarUrl\"\n        :width=\"250\"\n        :height=\"250\"\n        :crop=\"true\"\n        @input=\"avatar = arguments[0]\"\n      />\n    </div>\n    <div class=\"field\">\n      <label class=\"label\">Name</label>\n      <base-input\n        v-model=\"name\"\n        :errors=\"$v.name\"\n      />\n    </div>\n    <div class=\"field\">\n      <label class=\"label\">Email</label>\n      <base-input\n        v-model=\"email\"\n        :errors=\"$v.email\"\n      />\n    </div>\n    <div class=\"submit-field\">\n      <span\n        v-if=\"errorMessage\"\n        class=\"error-message\"\n      >\n        {{ errorMessage }}\n      </span>\n      <span\n        v-if=\"success\"\n        class=\"success-message\"\n      >\n        <i class=\"fas fa-check\"></i> Saved\n      </span>\n      <base-button\n        :disabled=\"loading\"\n        @click=\"onSubmit\"\n      >\n        {{ loading ? 'Saving...' : 'Save' }}\n      </base-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { required, email } from 'vuelidate/lib/validators'\n\nexport default {\n  data () {\n    return {\n      loading: false,\n      errorMessage: '',\n      success: false,\n      email: '',\n      name: '',\n      avatar: null\n    }\n  },\n\n  validations: {\n    email: { required, email },\n    name: { required }\n  },\n\n  mounted () {\n    this.name = this.currentUser.name\n    this.email = this.currentUser.email\n  },\n\n  methods: {\n    ...mapActions(['updateCurrentUserProfile']),\n    async onSubmit () {\n      this.$v.$touch()\n      if (!this.$v.$anyError) {\n        this.loading = true\n        try {\n          await this.updateCurrentUserProfile({\n            data: {\n              name: this.name,\n              email: this.email,\n              ...(this.avatar !== null ? { avatar: this.avatar } : {})\n            }\n          })\n          this.loading = false\n          this.success = true\n          setTimeout(() => {\n            this.success = false\n          }, 4000)\n        } catch (err) {\n          this.errorMessage = 'An error occured while updating your profile.'\n          this.loading = false\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.field\n  margin-bottom: 20px\n\n.image-field\n  width: 100%\n  display: flex\n  justify-content: center\n  align-items: center\n\n.label\n  margin-bottom: 3px\n  display: block\n\n.submit-field\n  display: flex\n  justify-content: flex-end\n  align-items: center\n\n.error-message\n  color: $errorColor\n  text-align: left\n  flex: 1\n\n.success-message\n  color: $successColor\n  text-align: left\n  flex: 1\n\n</style>\n"]}]}