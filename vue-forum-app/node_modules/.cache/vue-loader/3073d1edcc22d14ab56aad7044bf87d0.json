{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scott/forumApp/vue-forum-app/src/components/BaseImageInput.vue?vue&type=style&index=1&lang=stylus&","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/components/BaseImageInput.vue","mtime":1596415457415},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.image-cropper-modal .modal-container\n  max-height: 700px\n  height: calc(100% - 100px)\n",{"version":3,"sources":["BaseImageInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+KA;AACA;AACA","file":"BaseImageInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"base-image-input\">\n    <div\n      class=\"content\"\n      :class=\"{ 'has-image': imagePreviewData }\"\n      :style=\"{\n        'width': `${width}px`,\n        'height': `${height}px`,\n        'background-image': `url(${imagePreviewData})`\n      }\"\n      @click=\"chooseImage\"\n    >\n      <input\n        class=\"file-input\"\n        ref=\"fileInput\"\n        type=\"file\"\n        @change=\"onSelectFile\"\n      >\n      <span class=\"placeholder\">\n        <i class=\"fas fa-image placeholder-icon\"></i>\n        <span class=\"placeholder-text\">\n          {{ imagePreviewData ? 'Change Your Picture' : 'Choose Picture' }}\n        </span>\n      </span>\n    </div>\n    <base-modal\n      :show=\"showCropperModal\"\n      class=\"image-cropper-modal\"\n      :width=\"700\"\n      @close=\"closeCropper\"\n      @show-content=\"showCropper = true\"\n    >\n      <base-image-cropper\n        v-if=\"showCropper\"\n        :src=\"imageToCropData\"\n        :crop-width=\"width\"\n        :crop-height=\"height\"\n        @crop=\"onCrop\"\n      />\n    </base-modal>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n\n    width: {\n      type: Number,\n      default: 300\n    },\n\n    height: {\n      type: Number,\n      default: 300\n    },\n\n    crop: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data () {\n    return {\n      imagePreviewData: this.value,\n      imageToCropData: null,\n      showCropperModal: false,\n      showCropper: false\n    }\n  },\n\n  methods: {\n    chooseImage () {\n      this.$refs.fileInput.click()\n    },\n\n    onSelectFile () {\n      const input = this.$refs.fileInput\n      const files = input.files\n      if (files && files[0]) {\n        const reader = new FileReader()\n        reader.onload = e => {\n          if (this.crop) {\n            this.imageToCropData = e.target.result\n            this.showCropperModal = true\n          } else {\n            this.imagePreviewData = e.target.result\n            this.$emit('input', this.imagePreviewData)\n          }\n        }\n        reader.readAsDataURL(files[0])\n      }\n    },\n\n    onCrop (imageData) {\n      this.imagePreviewData = imageData\n      this.$emit('input', imageData)\n      this.closeCropper()\n    },\n\n    closeCropper () {\n      this.showCropperModal = false\n      this.showCropper = false\n      this.$refs.fileInput.value = ''\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.content\n  background-color: #9834a3\n  display: flex\n  justify-content: center\n  align-items: center\n  cursor: pointer\n  border-radius: 3px\n  background-size: cover\n  background-position: center\n  transition: 0.2s background-color ease-out\n\n.content:hover\n  background-color: #9834a3\n\n.file-input\n  display: none\n\n.placeholder\n  color: rgba(0, 0, 0, 0.3)\n  font-weight: bold\n  display: flex\n  flex-direction: column\n  justify-content: center\n  align-items: center\n  position: relative\n\n.content.has-image\n  position: relative\n\n.content.has-image:after\n  content: ''\n  position: absolute\n  z-index: 1\n  top: 0\n  left: 0\n  width: 100%\n  height: 100%\n  background: rgba(0, 0, 0, 0.3)\n  transition: 0.2s background ease-out\n\n.content.has-image:hover:after\n  background: rgba(0, 0, 0, 0.2)\n\n.content.has-image .placeholder\n  color: rgba(255, 255, 255, 0.7)\n  z-index: 2\n\n.placeholder-text\n  font-size: 20px\n  margin-top: 10px\n\n.placeholder-icon\n  font-size: 40px\n\n.base-image-cropper\n  width: 100%\n  height: 100%\n</style>\n\n<style lang=\"stylus\">\n.image-cropper-modal .modal-container\n  max-height: 700px\n  height: calc(100% - 100px)\n</style>\n"]}]}