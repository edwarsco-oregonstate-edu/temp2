{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scott/forumApp/vue-forum-app/src/components/BaseTextarea.vue?vue&type=style&index=0&id=3ebc704a&lang=stylus&scoped=true&","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/components/BaseTextarea.vue","mtime":1596414664759},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.textarea\n  width: 100%\n  border: 1px solid #AEAEAE\n  padding: 10px\n  border-radius: 2px\n  outline: none\n  color: #000\n  transition: 0.2s all\n  min-height: 300px\n  resize: vertical\n\n.base-input.disabled .textarea\n  background: #FAFAFA\n  color: #999\n\n.base-input.focused .textarea\n  border-color: $primaryColor\n\n.base-input.focused .label\n  color: $primaryColor\n\n.base-input.focused .label:after\n  color: $errorColor\n\n.base-input.invalid .textarea\n  border-color: $errorColor\n\n.base-input.invalid .label\n  color: $errorColor\n\n.error-message\n  color: $errorColor\n  font-size: 14px\n  padding: 7px 10px\n\n.label\n  font-weight: 700\n  font-size: 17px\n  transition: all .5s\n  margin-bottom: 10px\n  display: block\n",{"version":3,"sources":["BaseTextarea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"BaseTextarea.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    class=\"base-input\"\n    :class=\"{\n      'invalid': hasErrors,\n      'disabled': disabled,\n      'focused': focused\n    }\"\n  >\n    <label\n      v-if=\"label\"\n      class=\"label\"\n    >\n      {{ label }}\n    </label>\n    <textarea\n      :value=\"value\"\n      class=\"textarea\"\n      ref=\"input\"\n      :placeholder=\"placeholder\"\n      :disabled=\"disabled\"\n      :style=\"minHeight ? { 'min-height': `${minHeight}px` } : ''\"\n      @input=\"$emit('input', $event.target.value)\"\n      @focus=\"focused = true\"\n      @blur=\"focused = false\"\n    ></textarea>\n    <div\n      v-if=\"hasErrors\"\n      class=\"error-message\"\n    >\n      {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport validationMessages from '@/lib/validationMessages'\n\nexport default {\n  props: {\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n\n    label: {\n      type: String,\n      default: ''\n    },\n\n    placeholder: {\n      type: String,\n      default: ''\n    },\n\n    minHeight: {\n      type: Number,\n      default: null\n    },\n\n    errors: {\n      type: Object,\n      default: () => ({})\n    },\n\n    errorMessages: {\n      type: Object,\n      default: () => ({})\n    },\n\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data () {\n    return {\n      focused: false\n    }\n  },\n\n  computed: {\n    hasErrors () {\n      return this.errors.$anyError\n    },\n\n    errorMessage () {\n      const allRules = Object.keys(this.errors.$params)\n      const invalidRules = allRules.filter(rule => {\n        return !this.errors[rule]\n      })\n      if (!invalidRules.length) {\n        return null\n      }\n      const currentRule = invalidRules[0]\n\n      return this.errorMessages[currentRule]\n        ? this.errorMessages[currentRule]\n        : validationMessages[currentRule]\n    }\n  },\n\n  methods: {\n    focus () {\n      this.$refs.input.focus()\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.textarea\n  width: 100%\n  border: 1px solid #AEAEAE\n  padding: 10px\n  border-radius: 2px\n  outline: none\n  color: #000\n  transition: 0.2s all\n  min-height: 300px\n  resize: vertical\n\n.base-input.disabled .textarea\n  background: #FAFAFA\n  color: #999\n\n.base-input.focused .textarea\n  border-color: $primaryColor\n\n.base-input.focused .label\n  color: $primaryColor\n\n.base-input.focused .label:after\n  color: $errorColor\n\n.base-input.invalid .textarea\n  border-color: $errorColor\n\n.base-input.invalid .label\n  color: $errorColor\n\n.error-message\n  color: $errorColor\n  font-size: 14px\n  padding: 7px 10px\n\n.label\n  font-weight: 700\n  font-size: 17px\n  transition: all .5s\n  margin-bottom: 10px\n  display: block\n</style>\n"]}]}