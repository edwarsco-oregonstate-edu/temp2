{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scott/forumApp/vue-forum-app/src/components/BaseDropdownContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/components/BaseDropdownContent.vue","mtime":1596398635581},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n\n    options: {\n      type: Array,\n      default: () => ([])\n    },\n\n    status: {\n      type: String,\n      default: 'displayOptions'\n    },\n\n    selected: {\n      type: [String, Number],\n      default: ''\n    },\n\n    showSelectedFirst: {\n      type: Boolean,\n      default: false\n    },\n\n    yDirection: {\n      type: String,\n      default: 'below'\n    },\n\n    xDirection: {\n      type: String,\n      default: 'right'\n    },\n\n    searchValue: {\n      type: String,\n      default: ''\n    },\n\n    maxHeight: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      highlightedIndex: -1\n    }\n  },\n\n  computed: {\n    orderedOptions () {\n      const filteredOptions = this.options.filter(({ title }) => (new RegExp(this.searchValue)).test(title))\n      if (this.showSelectedFirst && this.selected) {\n        let orderedOptions = filteredOptions.filter(option => option.key !== this.selected)\n        const selectedOption = filteredOptions.find(option => option.key === this.selected)\n        return this.yDirection === 'below'\n          ? [selectedOption, ...orderedOptions]\n          : [...orderedOptions, selectedOption]\n      }\n      return filteredOptions\n    }\n  },\n\n  mounted () {\n    document.body.addEventListener('keydown', this.onKeyDown)\n  },\n\n  beforeDestroy () {\n    document.body.removeEventListener('keydown', this.onKeyDown)\n  },\n\n  watch: {\n    show () {\n      this.highlightedIndex = -1\n    }\n  },\n\n  methods: {\n    onKeyDown (e) {\n      if (!this.show) {\n        return\n      }\n      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 13) {\n        e.preventDefault()\n      }\n      if (e.keyCode === 40) {\n        this.moveDown()\n      } else if (e.keyCode === 38) {\n        this.moveUp()\n      } else if (e.keyCode === 13) {\n        this.onSelect()\n      }\n    },\n\n    onSelect () {\n      const option = this.orderedOptions.find(\n        (option, index) => index === this.highlightedIndex\n      )\n      if (option) {\n        this.$emit('select', option.key)\n      }\n    },\n\n    moveDown () {\n      this.highlightedIndex = (this.highlightedIndex + 1) % this.orderedOptions.length\n      this.$nextTick(() => {\n        if (this.highlightedIndex === 0) {\n          this.$refs.options.scrollTo(0, 0)\n          return\n        }\n        const highlightedEl = this.$el.querySelector('.highlighted')\n        const highlightedElBottom = highlightedEl.getBoundingClientRect().bottom\n        const optionsElBottom = this.$refs.options.getBoundingClientRect().bottom\n        if (highlightedElBottom > optionsElBottom) {\n          this.$refs.options.scrollTo(0, (highlightedElBottom - optionsElBottom) + this.$refs.options.scrollTop)\n        }\n      })\n    },\n\n    moveUp () {\n      this.highlightedIndex = (this.highlightedIndex - 1) < 0\n        ? this.orderedOptions.length - 1\n        : this.highlightedIndex - 1\n      this.$nextTick(() => {\n        const optionsElRect = this.$refs.options.getBoundingClientRect()\n        if (this.highlightedIndex === this.orderedOptions.length - 1) {\n          this.$refs.options.scrollTo(0, this.$refs.options.scrollHeight)\n          return\n        }\n        const highlightedEl = this.$el.querySelector('.highlighted')\n        const highlightedElTop = highlightedEl.getBoundingClientRect().top\n        if (highlightedElTop < optionsElRect.top) {\n          this.$refs.options.scrollTo(0, this.$refs.options.scrollTop - (optionsElRect.top - highlightedElTop))\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["BaseDropdownContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"BaseDropdownContent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <transition name=\"fade-up\">\n    <div\n      v-show=\"show\"\n      class=\"base-dropdown-content\"\n      :class=\"[xDirection, yDirection]\"\n    >\n      <div\n        v-if=\"status === 'loading'\"\n        class=\"loading\"\n      >\n        Fetching results\n      </div>\n      <div\n        v-else-if=\"status === 'empty'\"\n        class=\"empty\"\n      >\n        No results found\n      </div>\n      <ul\n        v-else-if=\"status === 'displayOptions'\"\n        class=\"options\"\n        ref=\"options\"\n        :style=\"{\n          'max-height': `${maxHeight}px`\n        }\"\n      >\n        <li\n          v-for=\"(option, index) in orderedOptions\"\n          :key=\"option.key\"\n          class=\"option\"\n          :class=\"{\n            'selected': option.key === selected,\n            'highlighted': index === highlightedIndex\n          }\"\n          @mouseenter=\"highlightedIndex = index\"\n          @click=\"onSelect\"\n        >\n          <slot :option=\"option\">\n            {{ option.title }}\n          </slot>\n        </li>\n      </ul>\n    </div>\n  </transition>\n</template>\n\n<script>\nexport default {\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n\n    options: {\n      type: Array,\n      default: () => ([])\n    },\n\n    status: {\n      type: String,\n      default: 'displayOptions'\n    },\n\n    selected: {\n      type: [String, Number],\n      default: ''\n    },\n\n    showSelectedFirst: {\n      type: Boolean,\n      default: false\n    },\n\n    yDirection: {\n      type: String,\n      default: 'below'\n    },\n\n    xDirection: {\n      type: String,\n      default: 'right'\n    },\n\n    searchValue: {\n      type: String,\n      default: ''\n    },\n\n    maxHeight: {\n      type: Number,\n      default: 200\n    }\n  },\n\n  data () {\n    return {\n      highlightedIndex: -1\n    }\n  },\n\n  computed: {\n    orderedOptions () {\n      const filteredOptions = this.options.filter(({ title }) => (new RegExp(this.searchValue)).test(title))\n      if (this.showSelectedFirst && this.selected) {\n        let orderedOptions = filteredOptions.filter(option => option.key !== this.selected)\n        const selectedOption = filteredOptions.find(option => option.key === this.selected)\n        return this.yDirection === 'below'\n          ? [selectedOption, ...orderedOptions]\n          : [...orderedOptions, selectedOption]\n      }\n      return filteredOptions\n    }\n  },\n\n  mounted () {\n    document.body.addEventListener('keydown', this.onKeyDown)\n  },\n\n  beforeDestroy () {\n    document.body.removeEventListener('keydown', this.onKeyDown)\n  },\n\n  watch: {\n    show () {\n      this.highlightedIndex = -1\n    }\n  },\n\n  methods: {\n    onKeyDown (e) {\n      if (!this.show) {\n        return\n      }\n      if (e.keyCode === 40 || e.keyCode === 38 || e.keyCode === 13) {\n        e.preventDefault()\n      }\n      if (e.keyCode === 40) {\n        this.moveDown()\n      } else if (e.keyCode === 38) {\n        this.moveUp()\n      } else if (e.keyCode === 13) {\n        this.onSelect()\n      }\n    },\n\n    onSelect () {\n      const option = this.orderedOptions.find(\n        (option, index) => index === this.highlightedIndex\n      )\n      if (option) {\n        this.$emit('select', option.key)\n      }\n    },\n\n    moveDown () {\n      this.highlightedIndex = (this.highlightedIndex + 1) % this.orderedOptions.length\n      this.$nextTick(() => {\n        if (this.highlightedIndex === 0) {\n          this.$refs.options.scrollTo(0, 0)\n          return\n        }\n        const highlightedEl = this.$el.querySelector('.highlighted')\n        const highlightedElBottom = highlightedEl.getBoundingClientRect().bottom\n        const optionsElBottom = this.$refs.options.getBoundingClientRect().bottom\n        if (highlightedElBottom > optionsElBottom) {\n          this.$refs.options.scrollTo(0, (highlightedElBottom - optionsElBottom) + this.$refs.options.scrollTop)\n        }\n      })\n    },\n\n    moveUp () {\n      this.highlightedIndex = (this.highlightedIndex - 1) < 0\n        ? this.orderedOptions.length - 1\n        : this.highlightedIndex - 1\n      this.$nextTick(() => {\n        const optionsElRect = this.$refs.options.getBoundingClientRect()\n        if (this.highlightedIndex === this.orderedOptions.length - 1) {\n          this.$refs.options.scrollTo(0, this.$refs.options.scrollHeight)\n          return\n        }\n        const highlightedEl = this.$el.querySelector('.highlighted')\n        const highlightedElTop = highlightedEl.getBoundingClientRect().top\n        if (highlightedElTop < optionsElRect.top) {\n          this.$refs.options.scrollTo(0, this.$refs.options.scrollTop - (optionsElRect.top - highlightedElTop))\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.base-dropdown-content\n  position: absolute\n  width: 100%\n  min-width: max-content\n  z-index: 99999\n  background: #FFF\n  box-shadow: 0 1px 5px rgba(0,0,0,.2), 0 2px 2px rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.12)\n  border-radius: 0 0 2px 2px\n\n.base-dropdown-content.below\n  top: 0\n\n.base-dropdown-content.above\n  bottom: 0\n\n.base-dropdown-content.right\n  left: 0\n\n.base-dropdown-content.left\n  right: 0\n\n.options\n  list-style: none\n  padding: 0\n  margin: 0\n  overflow: auto\n\n.option\n  padding: 15px\n  font-size: 14px\n  color: #444\n  cursor: pointer\n  transition: 0.2s background ease-out\n\n.option.selected\n  color: $primaryColor\n\n.option.highlighted\n  background: #F2F2F2\n\n.option + .option\n  border-top: 1px solid #F0F0F0\n\n.loading\n  padding: 20px\n  display: flex\n  justify-content: center\n  align-items: center\n\n.empty\n  padding: 20px\n  display: flex\n  justify-content: center\n  align-items: center\n\n.fade-up-enter-active,\n.fade-up-leave-active\n  transition: all 0.3s ease\n\n.fade-up-enter,\n.fade-up-leave-to\n  opacity: 0\n  transform: translate3d(0, 5%, 0)\n</style>\n"]}]}