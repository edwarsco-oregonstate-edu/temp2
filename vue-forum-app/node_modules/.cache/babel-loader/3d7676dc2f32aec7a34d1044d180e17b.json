{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js!/home/scott/forumApp/vue-forum-app/node_modules/eslint-loader/index.js??ref--13-0!/home/scott/forumApp/vue-forum-app/src/store/modules/topics.js","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/store/modules/topics.js","mtime":1596398635585},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Vue from 'vue';\nimport apiClient from 'api-client';\nexport default {\n  state: {\n    list: [],\n    current: null\n  },\n  actions: {\n    loadTopics: function () {\n      var _loadTopics = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n        var commit, filters, topics;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                filters = _ref2.filters;\n                _context.next = 4;\n                return apiClient.getTopics(filters);\n\n              case 4:\n                topics = _context.sent;\n                commit('SET_TOPICS_LIST', {\n                  topics: topics\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadTopics(_x, _x2) {\n        return _loadTopics.apply(this, arguments);\n      }\n\n      return loadTopics;\n    }(),\n    loadCurrentTopic: function () {\n      var _loadCurrentTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref3, _ref4) {\n        var commit, topicId, topic;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref3.commit;\n                topicId = _ref4.topicId;\n                _context2.next = 4;\n                return apiClient.getTopic(topicId);\n\n              case 4:\n                topic = _context2.sent;\n                commit('SET_CURRENT_TOPIC', {\n                  topic: topic\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadCurrentTopic(_x3, _x4) {\n        return _loadCurrentTopic.apply(this, arguments);\n      }\n\n      return loadCurrentTopic;\n    }(),\n    createTopic: function () {\n      var _createTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref5, _ref6) {\n        var commit, data, topicId;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref5.commit;\n                data = _ref6.data;\n                _context3.next = 4;\n                return apiClient.createTopic(data);\n\n              case 4:\n                topicId = _context3.sent._id;\n                return _context3.abrupt(\"return\", topicId);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function createTopic(_x5, _x6) {\n        return _createTopic.apply(this, arguments);\n      }\n\n      return createTopic;\n    }(),\n    updateTopic: function () {\n      var _updateTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(_ref7, _ref8) {\n        var commit, topicId, data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref7.commit;\n                topicId = _ref8.topicId, data = _ref8.data;\n                _context4.next = 4;\n                return apiClient.updateTopic(topicId, data);\n\n              case 4:\n                return _context4.abrupt(\"return\", topicId);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function updateTopic(_x7, _x8) {\n        return _updateTopic.apply(this, arguments);\n      }\n\n      return updateTopic;\n    }(),\n    deleteTopic: function () {\n      var _deleteTopic = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(_ref9, _ref10) {\n        var commit, topicId;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref9.commit;\n                topicId = _ref10.topicId;\n                _context5.next = 4;\n                return apiClient.deleteTopic(topicId);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function deleteTopic(_x9, _x10) {\n        return _deleteTopic.apply(this, arguments);\n      }\n\n      return deleteTopic;\n    }(),\n    addReply: function () {\n      var _addReply = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(_ref11, _ref12) {\n        var state, commit, data, reply;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                state = _ref11.state, commit = _ref11.commit;\n                data = _ref12.data;\n                _context6.next = 4;\n                return apiClient.addReply(state.current._id, data);\n\n              case 4:\n                reply = _context6.sent;\n                commit('ADD_REPLY_TO_CURRENT_TOPIC', {\n                  reply: reply\n                });\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function addReply(_x11, _x12) {\n        return _addReply.apply(this, arguments);\n      }\n\n      return addReply;\n    }(),\n    deleteReply: function () {\n      var _deleteReply = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(_ref13, _ref14) {\n        var state, commit, replyId;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                state = _ref13.state, commit = _ref13.commit;\n                replyId = _ref14.replyId;\n                _context7.next = 4;\n                return apiClient.deleteReply(state.current._id, replyId);\n\n              case 4:\n                commit('DELETE_REPLY_FROM_CURRENT_TOPIC', {\n                  replyId: replyId\n                });\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function deleteReply(_x13, _x14) {\n        return _deleteReply.apply(this, arguments);\n      }\n\n      return deleteReply;\n    }(),\n    updateReply: function () {\n      var _updateReply = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(_ref15, _ref16) {\n        var state, commit, replyId, data;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                state = _ref15.state, commit = _ref15.commit;\n                replyId = _ref16.replyId, data = _ref16.data;\n                _context8.next = 4;\n                return apiClient.updateReply(state.current._id, replyId, data);\n\n              case 4:\n                commit('UPDATE_REPLY', {\n                  replyId: replyId,\n                  data: data\n                });\n                return _context8.abrupt(\"return\", replyId);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function updateReply(_x15, _x16) {\n        return _updateReply.apply(this, arguments);\n      }\n\n      return updateReply;\n    }()\n  },\n  mutations: {\n    SET_TOPICS_LIST: function SET_TOPICS_LIST(state, _ref17) {\n      var topics = _ref17.topics;\n      state.list = topics;\n    },\n    SET_CURRENT_TOPIC: function SET_CURRENT_TOPIC(state, _ref18) {\n      var topic = _ref18.topic;\n      state.current = topic;\n    },\n    ADD_REPLY_TO_CURRENT_TOPIC: function ADD_REPLY_TO_CURRENT_TOPIC(state, _ref19) {\n      var reply = _ref19.reply;\n      state.current.replies = [].concat(_toConsumableArray(state.current.replies), [reply]);\n    },\n    DELETE_REPLY_FROM_CURRENT_TOPIC: function DELETE_REPLY_FROM_CURRENT_TOPIC(state, _ref20) {\n      var replyId = _ref20.replyId;\n      state.current.replies = state.current.replies.filter(function (reply) {\n        return reply._id !== replyId;\n      });\n    },\n    UPDATE_REPLY: function UPDATE_REPLY(state, _ref21) {\n      var replyId = _ref21.replyId,\n          data = _ref21.data;\n      var replyIndex = state.current.replies.map(function (reply) {\n        return reply._id;\n      }).indexOf(replyId);\n\n      if (replyIndex !== -1) {\n        Vue.set(state.current.replies, replyIndex, _objectSpread({}, state.current.replies[replyIndex], data));\n      }\n    }\n  }\n};",{"version":3,"sources":["/home/scott/forumApp/vue-forum-app/src/store/modules/topics.js"],"names":["Vue","apiClient","state","list","current","actions","loadTopics","commit","filters","getTopics","topics","loadCurrentTopic","topicId","getTopic","topic","createTopic","data","_id","updateTopic","deleteTopic","addReply","reply","deleteReply","replyId","updateReply","mutations","SET_TOPICS_LIST","SET_CURRENT_TOPIC","ADD_REPLY_TO_CURRENT_TOPIC","replies","DELETE_REPLY_FROM_CURRENT_TOPIC","filter","UPDATE_REPLY","replyIndex","map","indexOf","set"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport apiClient from 'api-client'\n\nexport default {\n  state: {\n    list: [],\n    current: null\n  },\n\n  actions: {\n    async loadTopics ({ commit }, { filters }) {\n      const topics = await apiClient.getTopics(filters)\n      commit('SET_TOPICS_LIST', { topics })\n    },\n\n    async loadCurrentTopic ({ commit }, { topicId }) {\n      const topic = await apiClient.getTopic(topicId)\n      commit('SET_CURRENT_TOPIC', { topic })\n    },\n\n    async createTopic ({ commit }, { data }) {\n      const topicId = (await apiClient.createTopic(data))._id\n      return topicId\n    },\n\n    async updateTopic ({ commit }, { topicId, data }) {\n      await apiClient.updateTopic(topicId, data)\n      return topicId\n    },\n\n    async deleteTopic ({ commit }, { topicId }) {\n      await apiClient.deleteTopic(topicId)\n    },\n\n    async addReply ({ state, commit }, { data }) {\n      const reply = await apiClient.addReply(state.current._id, data)\n      commit('ADD_REPLY_TO_CURRENT_TOPIC', { reply })\n    },\n\n    async deleteReply ({ state, commit }, { replyId }) {\n      await apiClient.deleteReply(state.current._id, replyId)\n      commit('DELETE_REPLY_FROM_CURRENT_TOPIC', { replyId })\n    },\n\n    async updateReply ({ state, commit }, { replyId, data }) {\n      await apiClient.updateReply(state.current._id, replyId, data)\n      commit('UPDATE_REPLY', { replyId, data })\n      return replyId\n    }\n  },\n\n  mutations: {\n    SET_TOPICS_LIST (state, { topics }) {\n      state.list = topics\n    },\n\n    SET_CURRENT_TOPIC (state, { topic }) {\n      state.current = topic\n    },\n\n    ADD_REPLY_TO_CURRENT_TOPIC (state, { reply }) {\n      state.current.replies = [\n        ...state.current.replies,\n        reply\n      ]\n    },\n\n    DELETE_REPLY_FROM_CURRENT_TOPIC (state, { replyId }) {\n      state.current.replies = state.current.replies.filter(\n        reply => reply._id !== replyId\n      )\n    },\n\n    UPDATE_REPLY (state, { replyId, data }) {\n      const replyIndex = state.current.replies.map(reply => reply._id).indexOf(replyId)\n      if (replyIndex !== -1) {\n        Vue.set(state.current.replies, replyIndex, { ...state.current.replies[replyIndex], ...data })\n      }\n    }\n  }\n}\n"]}]}