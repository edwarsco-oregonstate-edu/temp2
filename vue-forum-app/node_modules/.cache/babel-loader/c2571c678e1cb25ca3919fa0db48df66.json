{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js!/home/scott/forumApp/vue-forum-app/node_modules/eslint-loader/index.js??ref--13-0!/home/scott/forumApp/vue-forum-app/src/store/modules/users/permissionCheckers.js","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/store/modules/users/permissionCheckers.js","mtime":1596398635585},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport _Array$isArray from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nexport default {\n  canEditTopic: function canEditTopic(topic) {\n    return this.checkPermissions({\n      permissions: ['categories_topics:write'],\n      scope: {\n        name: 'categories',\n        id: topic.category.slug\n      }\n    }) || this.checkPermissions({\n      permissions: ['own_topics:write'],\n      isOwner: this._id === topic.user._id\n    });\n  },\n  canDeleteTopic: function canDeleteTopic(topic) {\n    return this.checkPermissions({\n      permissions: ['categories_topics:delete'],\n      scope: {\n        name: 'categories',\n        id: topic.category.slug\n      }\n    }) || this.checkPermissions({\n      permissions: ['own_topics:delete'],\n      isOwner: this._id === topic.user._id\n    });\n  },\n  canEditReply: function canEditReply(reply, categorySlug) {\n    return this.checkPermissions({\n      permissions: ['categories_replies:write'],\n      scope: {\n        name: 'categories',\n        id: categorySlug\n      }\n    }) || this.checkPermissions({\n      permissions: ['own_replies:write'],\n      isOwner: this._id === reply.user._id\n    });\n  },\n  canDeleteReply: function canDeleteReply(reply, categorySlug) {\n    return this.checkPermissions({\n      permissions: ['categories_replies:delete'],\n      scope: {\n        name: 'categories',\n        id: categorySlug\n      }\n    }) || this.checkPermissions({\n      permissions: ['own_replies:delete'],\n      isOwner: this._id === reply.user._id\n    });\n  },\n  checkPermissions: function checkPermissions(_ref) {\n    var permissions = _ref.permissions,\n        _ref$isOwner = _ref.isOwner,\n        isOwner = _ref$isOwner === void 0 ? null : _ref$isOwner,\n        _ref$scope = _ref.scope,\n        scope = _ref$scope === void 0 ? null : _ref$scope;\n\n    if (this.can(permissions, scope)) {\n      return isOwner === null ? true : isOwner;\n    }\n\n    return false;\n  },\n  can: function can(permissions) {\n    var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var targetPermissions = _Array$isArray(permissions) ? permissions : [permissions];\n    var userPermissions = !scope ? this.permissions.root : this.permissions[scope.name] && this.permissions[scope.name][scope.id];\n    return targetPermissions.every(function (value) {\n      return (userPermissions || []).includes(value);\n    });\n  }\n};",{"version":3,"sources":["/home/scott/forumApp/vue-forum-app/src/store/modules/users/permissionCheckers.js"],"names":["canEditTopic","topic","checkPermissions","permissions","scope","name","id","category","slug","isOwner","_id","user","canDeleteTopic","canEditReply","reply","categorySlug","canDeleteReply","can","targetPermissions","userPermissions","root","every","value","includes"],"mappings":"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","sourcesContent":["export default {\n  canEditTopic (topic) {\n    return this.checkPermissions({\n      permissions: ['categories_topics:write'],\n      scope: { name: 'categories', id: topic.category.slug }\n    }) ||\n    this.checkPermissions({\n      permissions: ['own_topics:write'],\n      isOwner: this._id === topic.user._id\n    })\n  },\n\n  canDeleteTopic (topic) {\n    return this.checkPermissions({\n      permissions: ['categories_topics:delete'],\n      scope: { name: 'categories', id: topic.category.slug }\n    }) ||\n    this.checkPermissions({\n      permissions: ['own_topics:delete'],\n      isOwner: this._id === topic.user._id\n    })\n  },\n\n  canEditReply (reply, categorySlug) {\n    return this.checkPermissions({\n      permissions: ['categories_replies:write'],\n      scope: { name: 'categories', id: categorySlug }\n    }) ||\n    this.checkPermissions({\n      permissions: ['own_replies:write'],\n      isOwner: this._id === reply.user._id\n    })\n  },\n\n  canDeleteReply (reply, categorySlug) {\n    return this.checkPermissions({\n      permissions: ['categories_replies:delete'],\n      scope: { name: 'categories', id: categorySlug }\n    }) ||\n    this.checkPermissions({\n      permissions: ['own_replies:delete'],\n      isOwner: this._id === reply.user._id\n    })\n  },\n\n  checkPermissions ({ permissions, isOwner = null, scope = null }) {\n    if (this.can(permissions, scope)) {\n      return isOwner === null\n        ? true\n        : isOwner\n    }\n    return false\n  },\n\n  can (permissions, scope = null) {\n    const targetPermissions = Array.isArray(permissions) ? permissions : [permissions]\n    let userPermissions = !scope\n      ? this.permissions.root\n      : this.permissions[scope.name] && this.permissions[scope.name][scope.id]\n    return targetPermissions.every(value => (userPermissions || []).includes(value))\n  }\n}\n"]}]}