{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js!/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scott/forumApp/vue-forum-app/src/components/CategoryForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/components/CategoryForm.vue","mtime":1596398635581},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  props: {\n    categorySlug: {\n      type: String,\n      default: null\n    },\n    update: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      title: '',\n      description: '',\n      loading: false,\n      errorMessage: ''\n    };\n  },\n  validations: {\n    title: {\n      required: required\n    },\n    description: {\n      required: required\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    category: function category(state) {\n      return state.categories.current;\n    }\n  })),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n\n              if (!this.categorySlug) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return this.loadCurrentCategory({\n                categorySlug: this.categorySlug\n              });\n\n            case 5:\n              this.title = this.category.title;\n              this.description = this.category.description;\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              this.$router.push({\n                name: 'Home'\n              });\n\n            case 12:\n              this.loading = false;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 9]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: _objectSpread({}, mapActions(['loadCurrentCategory', 'createCategory', 'updateCategory']), {\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var categorySlug;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (this.$v.$anyError) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                this.loading = true;\n                _context2.prev = 3;\n\n                if (!this.update) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 7;\n                return this.updateCategory({\n                  categorySlug: this.categorySlug,\n                  data: {\n                    title: this.title,\n                    description: this.description\n                  }\n                });\n\n              case 7:\n                categorySlug = _context2.sent;\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.next = 12;\n                return this.createCategory({\n                  data: {\n                    title: this.title,\n                    description: this.description\n                  }\n                });\n\n              case 12:\n                categorySlug = _context2.sent;\n\n              case 13:\n                this.loading = false;\n                this.$router.push({\n                  name: 'Category',\n                  params: {\n                    categorySlug: categorySlug\n                  }\n                });\n                _context2.next = 21;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](3);\n                this.loading = false;\n                this.errorMessage = \"An error occured while \".concat(this.update ? 'updating' : 'creating', \" this category. Please try again later.\");\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 17]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  })\n};",{"version":3,"sources":["CategoryForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAMA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AANA,GADA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GApBA;AAsBA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,WAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AAFA,GAtBA;AA2BA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,UAAA,CAAA,OAAA;AAAA;AADA,GAAA,CADA,CA3BA;AAiCA,EAAA,OAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA,mBAAA,OAAA,GAAA,IAAA;;AAlCA,mBAmCA,KAAA,YAnCA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAqCA,KAAA,mBAAA,CAAA;AAAA,gBAAA,YAAA,EAAA,KAAA;AAAA,eAAA,CArCA;;AAAA;AAsCA,mBAAA,KAAA,GAAA,KAAA,QAAA,CAAA,KAAA;AACA,mBAAA,WAAA,GAAA,KAAA,QAAA,CAAA,WAAA;AAvCA;AAAA;;AAAA;AAAA;AAAA;AAyCA,mBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,IAAA,EAAA;AAAA,eAAA;;AAzCA;AA4CA,mBAAA,OAAA,GAAA,KAAA;;AA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+CA,EAAA,OAAA,oBACA,UAAA,CAAA,CACA,qBADA,EAEA,gBAFA,EAGA,gBAHA,CAAA,CADA;AAOA,IAAA,QAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,qBAAA,EAAA,CAAA,MAAA;;AARA,oBASA,KAAA,EAAA,CAAA,SATA;AAAA;AAAA;AAAA;;AAUA,qBAAA,OAAA,GAAA,IAAA;AAVA;;AAAA,qBAaA,KAAA,MAbA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAcA,KAAA,cAAA,CAAA;AACA,kBAAA,YAAA,EAAA,KAAA,YADA;AAEA,kBAAA,IAAA,EAAA;AACA,oBAAA,KAAA,EAAA,KAAA,KADA;AAEA,oBAAA,WAAA,EAAA,KAAA;AAFA;AAFA,iBAAA,CAdA;;AAAA;AAcA,gBAAA,YAdA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAsBA,KAAA,cAAA,CAAA;AACA,kBAAA,IAAA,EAAA;AACA,oBAAA,KAAA,EAAA,KAAA,KADA;AAEA,oBAAA,WAAA,EAAA,KAAA;AAFA;AADA,iBAAA,CAtBA;;AAAA;AAsBA,gBAAA,YAtBA;;AAAA;AA6BA,qBAAA,OAAA,GAAA,KAAA;AACA,qBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,IAAA,EAAA,UAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,oBAAA,YAAA,EAAA;AAAA;AAAA,iBAAA;AA9BA;AAAA;;AAAA;AAAA;AAAA;AAgCA,qBAAA,OAAA,GAAA,KAAA;AACA,qBAAA,YAAA,oCAAA,KAAA,MAAA,GAAA,UAAA,GAAA,UAAA;;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA/CA,CAAA","sourcesContent":["<template>\n  <base-spinner v-if=\"loading\"/>\n  <div\n    v-else\n    class=\"category-form page-form\"\n  >\n    <div class=\"field\">\n      <label class=\"label\">Title</label>\n      <base-input\n        v-model=\"title\"\n        :errors=\"$v.title\"\n      />\n    </div>\n    <div class=\"field\">\n      <label class=\"label\">Description</label>\n      <base-input\n        v-model=\"description\"\n        :errors=\"$v.description\"\n      />\n    </div>\n    <div class=\"submit-field\">\n      <span\n        v-if=\"errorMessage\"\n        class=\"error-message\"\n      >\n        {{ errorMessage }}\n      </span>\n      <base-button\n        @click=\"onSubmit\"\n      >\n        {{ update ? 'Update' : 'Create' }}\n      </base-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\nimport { required } from 'vuelidate/lib/validators'\n\nexport default {\n  props: {\n    categorySlug: {\n      type: String,\n      default: null\n    },\n\n    update: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data () {\n    return {\n      title: '',\n      description: '',\n      loading: false,\n      errorMessage: ''\n    }\n  },\n\n  validations: {\n    title: { required },\n    description: { required }\n  },\n\n  computed: {\n    ...mapState({\n      category: state => state.categories.current\n    })\n  },\n\n  async mounted () {\n    this.loading = true\n    if (this.categorySlug) {\n      try {\n        await this.loadCurrentCategory({ categorySlug: this.categorySlug })\n        this.title = this.category.title\n        this.description = this.category.description\n      } catch (errr) {\n        this.$router.push({ name: 'Home' })\n      }\n    }\n    this.loading = false\n  },\n\n  methods: {\n    ...mapActions([\n      'loadCurrentCategory',\n      'createCategory',\n      'updateCategory'\n    ]),\n\n    async onSubmit () {\n      this.$v.$touch()\n      if (!this.$v.$anyError) {\n        this.loading = true\n        try {\n          let categorySlug\n          if (this.update) {\n            categorySlug = await this.updateCategory({\n              categorySlug: this.categorySlug,\n              data: {\n                title: this.title,\n                description: this.description\n              }\n            })\n          } else {\n            categorySlug = await this.createCategory({\n              data: {\n                title: this.title,\n                description: this.description\n              }\n            })\n          }\n          this.loading = false\n          this.$router.push({ name: 'Category', params: { categorySlug } })\n        } catch (error) {\n          this.loading = false\n          this.errorMessage = `An error occured while ${this.update ? 'updating' : 'creating'} this category. Please try again later.`\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.base-spinner\n  display: flex\n  justify-content: center\n  align-items: center\n  background: #FFF\n  padding: 50px 0\n\n.field\n  margin-bottom: 20px\n\n.label\n  margin-bottom: 3px\n  display: block\n\n.submit-field\n  display: flex\n  justify-content: flex-end\n  align-items: center\n\n.error-message\n  color: $errorColor\n  text-align: left\n  flex: 1\n</style>\n"],"sourceRoot":"src/components"}]}