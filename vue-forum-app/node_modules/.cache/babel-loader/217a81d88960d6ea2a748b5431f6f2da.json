{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js!/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/scott/forumApp/vue-forum-app/src/components/PasswordSettingsForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/components/PasswordSettingsForm.vue","mtime":1596398635581},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { required } from 'vuelidate/lib/validators';\nexport default {\n  data: function data() {\n    return {\n      loading: false,\n      errorMessage: '',\n      success: false,\n      newPassword: '',\n      currentPassword: ''\n    };\n  },\n  validations: {\n    newPassword: {\n      required: required\n    },\n    currentPassword: {\n      required: required\n    }\n  },\n  methods: _objectSpread({}, mapActions(['updateCurrentUserPassword']), {\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$v.$touch();\n\n                if (this.$v.$anyError) {\n                  _context.next = 19;\n                  break;\n                }\n\n                this.loading = true;\n                _context.prev = 3;\n                _context.next = 6;\n                return this.updateCurrentUserPassword({\n                  data: {\n                    currentPassword: this.currentPassword,\n                    newPassword: this.newPassword\n                  }\n                });\n\n              case 6:\n                this.loading = false;\n                this.success = true;\n                this.errorMessage = '';\n                this.$v.$reset();\n                this.currentPassword = '';\n                this.newPassword = '';\n                setTimeout(function () {\n                  _this.success = false;\n                }, 4000);\n                _context.next = 19;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](3);\n                this.errorMessage = _context.t0.data.message;\n                this.loading = false;\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 15]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  })\n};",{"version":3,"sources":["PasswordSettingsForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,eAAA,EAAA;AALA,KAAA;AAOA,GATA;AAWA,EAAA,WAAA,EAAA;AACA,IAAA,WAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,eAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AAFA,GAXA;AAgBA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,2BAAA,CAAA,CADA;AAEA,IAAA,QAFA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGA,qBAAA,EAAA,CAAA,MAAA;;AAHA,oBAIA,KAAA,EAAA,CAAA,SAJA;AAAA;AAAA;AAAA;;AAKA,qBAAA,OAAA,GAAA,IAAA;AALA;AAAA;AAAA,uBAOA,KAAA,yBAAA,CAAA;AACA,kBAAA,IAAA,EAAA;AACA,oBAAA,eAAA,EAAA,KAAA,eADA;AAEA,oBAAA,WAAA,EAAA,KAAA;AAFA;AADA,iBAAA,CAPA;;AAAA;AAaA,qBAAA,OAAA,GAAA,KAAA;AACA,qBAAA,OAAA,GAAA,IAAA;AACA,qBAAA,YAAA,GAAA,EAAA;AACA,qBAAA,EAAA,CAAA,MAAA;AACA,qBAAA,eAAA,GAAA,EAAA;AACA,qBAAA,WAAA,GAAA,EAAA;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,iBAFA,EAEA,IAFA,CAAA;AAnBA;AAAA;;AAAA;AAAA;AAAA;AAuBA,qBAAA,YAAA,GAAA,YAAA,IAAA,CAAA,OAAA;AACA,qBAAA,OAAA,GAAA,KAAA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhBA,CAAA","sourcesContent":["<template>\n  <div class=\"password-settings-form page-form\">\n    <div class=\"field\">\n      <label class=\"label\">Current Password</label>\n      <base-input\n        v-model=\"currentPassword\"\n        type=\"password\"\n        :errors=\"$v.currentPassword\"\n      />\n    </div>\n    <div class=\"field\">\n      <label class=\"label\">New Password</label>\n      <base-input\n        v-model=\"newPassword\"\n        type=\"password\"\n        :errors=\"$v.newPassword\"\n      />\n    </div>\n    <div class=\"submit-field\">\n      <span\n        v-if=\"errorMessage\"\n        class=\"error-message\"\n      >\n        {{ errorMessage }}\n      </span>\n      <span\n        v-if=\"success\"\n        class=\"success-message\"\n      >\n        <i class=\"fas fa-check\"></i> Saved\n      </span>\n      <base-button\n        :disabled=\"loading\"\n        @click=\"onSubmit\"\n      >\n        {{ loading ? 'Saving...' : 'Save' }}\n      </base-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { required } from 'vuelidate/lib/validators'\n\nexport default {\n  data () {\n    return {\n      loading: false,\n      errorMessage: '',\n      success: false,\n      newPassword: '',\n      currentPassword: ''\n    }\n  },\n\n  validations: {\n    newPassword: { required },\n    currentPassword: { required }\n  },\n\n  methods: {\n    ...mapActions(['updateCurrentUserPassword']),\n    async onSubmit () {\n      this.$v.$touch()\n      if (!this.$v.$anyError) {\n        this.loading = true\n        try {\n          await this.updateCurrentUserPassword({\n            data: {\n              currentPassword: this.currentPassword,\n              newPassword: this.newPassword\n            }\n          })\n          this.loading = false\n          this.success = true\n          this.errorMessage = ''\n          this.$v.$reset()\n          this.currentPassword = ''\n          this.newPassword = ''\n          setTimeout(() => {\n            this.success = false\n          }, 4000)\n        } catch (err) {\n          this.errorMessage = err.data.message\n          this.loading = false\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n.field\n  margin-bottom: 20px\n\n.label\n  margin-bottom: 3px\n  display: block\n\n.submit-field\n  display: flex\n  justify-content: flex-end\n  align-items: center\n\n.error-message\n  color: $errorColor\n  text-align: left\n  flex: 1\n\n.success-message\n  color: $successColor\n  text-align: left\n  flex: 1\n</style>\n"],"sourceRoot":"src/components"}]}