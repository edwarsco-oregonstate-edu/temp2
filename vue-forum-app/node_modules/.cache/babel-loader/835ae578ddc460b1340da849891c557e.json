{"remainingRequest":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js!/home/scott/forumApp/vue-forum-app/node_modules/eslint-loader/index.js??ref--13-0!/home/scott/forumApp/vue-forum-app/src/api/server/index.js","dependencies":[{"path":"/home/scott/forumApp/vue-forum-app/src/api/server/index.js","mtime":1596398635581},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/scott/forumApp/vue-forum-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/scott/forumApp/vue-forum-app/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\n\nvar request =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(method, url, requestData) {\n    var _ref2, data, error;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios({\n              baseURL: process.env.VUE_APP_API_SERVER_BASE_URL,\n              method: method,\n              url: url,\n              data: requestData,\n              headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('auth_token')\n              }\n            });\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            return _context.abrupt(\"return\", _Promise.resolve(data));\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            error = {\n              status: _context.t0.response.status,\n              data: _context.t0.response.data\n            };\n            return _context.abrupt(\"return\", _Promise.reject(error));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function request(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getCategories: function getCategories() {\n    return request('get', 'categories');\n  },\n  getCategory: function getCategory(categorySlug) {\n    return request('get', \"categories/\".concat(categorySlug));\n  },\n  createCategory: function createCategory(data) {\n    return request('post', 'categories', data);\n  },\n  updateCategory: function updateCategory(categorySlug, data) {\n    return request('put', \"categories/\".concat(categorySlug), data);\n  },\n  deleteCategory: function deleteCategory(categorySlug) {\n    return request('delete', \"categories/\".concat(categorySlug));\n  },\n  getTopics: function getTopics(filters) {\n    if (filters.categorySlug) {\n      return request('get', \"categories/\".concat(filters.categorySlug, \"/topics\"));\n    }\n  },\n  getTopic: function getTopic(topicId) {\n    return request('get', \"topics/\".concat(topicId));\n  },\n  createTopic: function createTopic(data) {\n    return request('post', 'topics', data);\n  },\n  updateTopic: function updateTopic(topicId, data) {\n    return request('put', \"topics/\".concat(topicId), data);\n  },\n  deleteTopic: function deleteTopic(topicId) {\n    return request('delete', \"topics/\".concat(topicId));\n  },\n  addReply: function addReply(topicId, data) {\n    return request('post', \"topics/\".concat(topicId, \"/replies\"), data);\n  },\n  deleteReply: function deleteReply(topicId, replyId) {\n    return request('delete', \"topics/\".concat(topicId, \"/replies/\").concat(replyId));\n  },\n  updateReply: function updateReply(topicId, replyId, data) {\n    return request('put', \"topics/\".concat(topicId, \"/replies/\").concat(replyId), data);\n  },\n  registerUser: function registerUser(data) {\n    return request('post', 'register', data);\n  },\n  login: function login(_ref3) {\n    var email = _ref3.email,\n        password = _ref3.password;\n    return request('post', 'login', {\n      email: email,\n      password: password\n    });\n  },\n  getUserData: function getUserData() {\n    return request('get', 'getprofile');\n  },\n  updateUserProfile: function updateUserProfile(_ref4) {\n    var data = _ref4.data;\n    return request('put', 'profile', data);\n  },\n  updateUserPassword: function updateUserPassword(_ref5) {\n    var data = _ref5.data;\n    return request('put', 'profile/password', data);\n  }\n};",{"version":3,"sources":["/home/scott/forumApp/vue-forum-app/src/api/server/index.js"],"names":["axios","request","method","url","requestData","baseURL","process","env","VUE_APP_API_SERVER_BASE_URL","data","headers","Authorization","localStorage","getItem","resolve","error","status","response","reject","getCategories","getCategory","categorySlug","createCategory","updateCategory","deleteCategory","getTopics","filters","getTopic","topicId","createTopic","updateTopic","deleteTopic","addReply","deleteReply","replyId","updateReply","registerUser","login","email","password","getUserData","updateUserProfile","updateUserPassword"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst request = async (method, url, requestData) => {\n  try {\n    const { data } = await axios({\n      baseURL: process.env.VUE_APP_API_SERVER_BASE_URL,\n      method,\n      url,\n      data: requestData,\n      headers: { Authorization: 'Bearer ' + (localStorage.getItem('auth_token')) }\n    })\n    return Promise.resolve(data)\n  } catch (err) {\n    const error = {\n      status: err.response.status,\n      data: err.response.data\n    }\n    return Promise.reject(error)\n  }\n}\n\nexport default {\n  getCategories () {\n    return request('get', 'categories')\n  },\n\n  getCategory (categorySlug) {\n    return request('get', `categories/${categorySlug}`)\n  },\n\n  createCategory (data) {\n    return request('post', 'categories', data)\n  },\n\n  updateCategory (categorySlug, data) {\n    return request('put', `categories/${categorySlug}`, data)\n  },\n\n  deleteCategory (categorySlug) {\n    return request('delete', `categories/${categorySlug}`)\n  },\n\n  getTopics (filters) {\n    if (filters.categorySlug) {\n      return request('get', `categories/${filters.categorySlug}/topics`)\n    }\n  },\n\n  getTopic (topicId) {\n    return request('get', `topics/${topicId}`)\n  },\n\n  createTopic (data) {\n    return request('post', 'topics', data)\n  },\n\n  updateTopic (topicId, data) {\n    return request('put', `topics/${topicId}`, data)\n  },\n\n  deleteTopic (topicId) {\n    return request('delete', `topics/${topicId}`)\n  },\n\n  addReply (topicId, data) {\n    return request('post', `topics/${topicId}/replies`, data)\n  },\n\n  deleteReply (topicId, replyId) {\n    return request('delete', `topics/${topicId}/replies/${replyId}`)\n  },\n\n  updateReply (topicId, replyId, data) {\n    return request('put', `topics/${topicId}/replies/${replyId}`, data)\n  },\n\n  registerUser (data) {\n    return request('post', 'register', data)\n  },\n\n  login ({ email, password }) {\n    return request('post', 'login', { email, password })\n  },\n\n  getUserData () {\n    return request('get', 'getprofile')\n  },\n\n  updateUserProfile ({ data }) {\n    return request('put', 'profile', data)\n  },\n\n  updateUserPassword ({ data }) {\n    return request('put', 'profile/password', data)\n  }\n}\n"]}]}